# See https://aka.ms/yaml for documentation

trigger:
- master

jobs:


- job: 'Windows'
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      "64bits":
        PLATFORM: 'windows-64'
        python.arch: 'x64'
        vs.arch: 'amd64'
      "32bits":
        PLATFORM: 'windows-32'
        python.arch: 'x86'
        vs.arch: 'x86'
  steps:
  - checkout: self
    submodules: true
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
      architecture: '$(python.arch)'
  - bash: |
      set -eux
      python --version
      pip install -U pip
      pip install -r requirements.txt
    displayName: 'Setup venv'
  - bash: |
      set -eux
      scons platform='$(PLATFORM)' MSVC_USE_SCRIPT=true TARGET_ARCH='$(vs.arch)' sample=true CC=cl.exe release
    displayName: 'Build project'
  - bash: |
      set -eux
      scons platform='$(PLATFORM)' MSVC_USE_SCRIPT=true TARGET_ARCH='$(vs.arch)' sample=true CC=cl.exe tests
    displayName: 'Run tests'


- job: 'Linux'
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    CC: clang
    PLATFORM: 'x11-64'
  steps:
  - checkout: self
    submodules: true
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
  - bash: |
      set -eux
      $CC --version
      python --version
      pip install -U pip
      pip install -r requirements.txt
    displayName: 'Setup venv'
  - bash: |
      set -eux
      scons platform='$(PLATFORM)' sample=true CC=$CC checkstyle
      scons platform='$(PLATFORM)' sample=true CC=$CC release
    displayName: 'Build project'
  - bash: |
      set -eux
      scons platform='$(PLATFORM)' sample=true CC=$CC tests
    displayName: 'Run tests'


- job: 'macOS'
  pool:
    vmImage: 'macOS-latest'
  variables:
    CC: clang
    PLATFORM: 'osx-64'
  steps:
  - checkout: self
    submodules: true
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
  - bash: |
      set -eux
      $CC --version
      python --version
      pip install -U pip
      pip install -r requirements.txt
    displayName: 'Setup venv'
  - bash: |
      set -eux
      EXTRA_CFLAGS="-I$(xcrun --show-sdk-path)/usr/include"
      echo $EXTRA_CFLAGS
      scons platform='$(PLATFORM)' CFLAGS=$EXTRA_CFLAGS sample=true CC=$CC release
    displayName: 'Build project'
  - bash: |
      set -eux
      scons platform='$(PLATFORM)' CFLAGS=$EXTRA_CFLAGS sample=true CC=$CC tests
    displayName: 'Run tests'
